#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 88 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1           0 11517 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 193
(6
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |Hw 8 Final|) (read-case-sensitive #t) (teachpacks ()) (htdp-setti"
 #"ngs #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Tetris"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Ido Tzhori / Gubi Ganguly"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(7
 #";-------------------------------------------------------------------"
 #"-----------"
) 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Exercise 1"
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(8
 #";;; OUR X AND Y COORDINATE BEGIN IN THE TOP LEFT OF THE GRID AT (0,0"
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; CONSTANTS ;;"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"BOARD-WIDTH-PIXEL"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"BOARD-HEIGHT-PIXEL"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; empty background"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 17 #"BOARD-WIDTH-PIXEL"
0 0 24 3 1 #" "
0 0 14 3 18 #"BOARD-HEIGHT-PIXEL"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; background with gray grid"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"gray"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 1 #" "
0 0 14 3 2 #"SQ"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BACKGROUNDv2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 1 #" "
0 0 14 3 2 #"GR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; DATA DEFINITIONS ;;"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ["
0 0 14 3 13 #"falling-piece"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; A World is a (make-world Piece LOBricks)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; Interpretation: The world state of our game"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; - fallingPiece is a (make-brick x y color)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(9
 #"; - LOBricks is a list of bricks that represent the bricks at the bo"
 #"ttom"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #"; Origin is at the top-middle, starting at (width/2, 0)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"piece"
0 0 24 3 2 #" ["
0 0 14 3 8 #"LOBricks"
0 0 24 3 1 #" "
0 0 14 3 6 #"center"
0 0 24 3 1 #" "
0 0 14 3 4 #"Type"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; A Piece is a (make-piece LOBricks Posn String)"
0 0 24 29 1 #"\n"
0 0 17 3 85
(10
 #"; Interpretation: The tetraminos in a game of Tetris (collection of "
 #"connected bricks)"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #"; A Piece must contain at least one Brick"
0 0 24 29 1 #"\n"
0 0 17 3 75
(11
 #"; LOBricks = list of bricks, center = center of brick, type = name o"
 #"f piece"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; A LOBricks (ListOfBricks) is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; - (cons Brick LOBricks)"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; - (cons Brick empty)"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; Interpretation: A list of bricks is multiple bricks in a list with"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; specific x y coordinates and colors"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; A Type is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"O\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"I\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"L\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"J\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"T\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"Z\""
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - \"S\""
0 0 24 29 1 #"\n"
0 0 17 3 77
(12
 #"; Interpretation: represents the shape of the piece as a letter (as "
 #"a String)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 2 #" ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; A Brick is a (make-brick x y Color)"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; Interpretation: A (make-brick x y c) represents a square brick "
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; at position x y in the grid, to be rendered in color c."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Exercise 2"
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; EXAMPLES ;;"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(13
 #"; NOTE: These examples do not create proper tetrominoes, but rather "
 #"single"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(14
 #"; blocks in a world. For proper tetrominoes (such as T, Z, S, etc), "
 #"refer to"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #"; the examples in Exercise 3 (below)."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOBricks1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"piece1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOBricks1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"piece1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOBricks2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick2"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"piece2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOBricks2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"piece2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOBricks3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick3"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick2"
0 0 24 3 1 #" "
0 0 14 3 6 #"brick1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"piece3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOBricks3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"J\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 6 #"piece3"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; error: piece x-axis < 0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"bad-piece"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 4 #"-0.5"
0 0 24 3 1 #" "
0 0 21 3 4 #"-0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; error: piece x-axis > 20 (BOARD-WIDTH)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"bad-piece-over-width"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 4 #"40.5"
0 0 24 3 1 #" "
0 0 21 3 4 #"40.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; TEMPLATES ;;"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-templ"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"piece-templ"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"LOBricks-templ"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"piece-templ"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"LOBricks-templ"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 15 #"LOBricks-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 15 #"LOBricks-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"piece-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"LOBricks-templ"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-templ"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")) "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"LOBricks-templ"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Type-templ"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-templ"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Exercise 3"
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Definition of bricks for pieces ;;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; O piece = 0,0 \\ 0,1 \\ 1,1 \\ 1,0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; I piece = 0,0 \\ 1,0 \\ 2,0 \\ 3,0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; L piece = 2,0 \\ 2,1 \\ 1,1 \\ 0,1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; J piece = 0,0 \\ 0,1 \\ 1,1 \\ 2,1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; T piece = 0,1 \\ 1,1 \\ 1,0 \\ 2,1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Z piece = 0,0 \\ 1,0 \\ 1,1 \\ 2,1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; S piece = 0,1 \\ 1,1 \\ 1,0 \\ 2,0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; M Piece = 0,0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"M-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; II Piece = 0,0 \\ 1,0 \\ 2,0 \\ 3,0 \\ 4,0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"DarkGreen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"DarkGreen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"DarkGreen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"DarkGreen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"DarkGreen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Piece definitions ;;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"L-Brick-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-J"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"J\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-T"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"T-Brick-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"T\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-Z"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"Z\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"S-Brick-2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-M"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"M-Brick-1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"M-Brick-1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"M-Brick-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 19 3 3 #"\"M\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-1"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-2"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-3"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-4"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"II-Brick-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 19 3 4 #"\"II\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; World definitions ;;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(15
 #"; Examples of Worlds with proper tetrominoes/pieces of the game Tetr"
 #"is"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-O"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-I"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-L"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-J"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-J"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-T"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-T"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-Z"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-Z"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-S"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"world-M"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-M"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"world-II"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Adding a piece onto the grid ;;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; brick+outline : Brick -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; Converts a brick into an image with outline"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 9 #"I-Brick-1"
0 0 24 3 2 #") "
0 6           4 21 495
(16
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0"
 #" 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"blue\")))) #("
 #"struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 9 #"J-Brick-1"
0 0 24 3 2 #") "
0 6           4 21 495
(17
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0"
 #" 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"cyan\")))) #("
 #"struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 9 #"O-Brick-2"
0 0 24 3 2 #") "
0 6           4 21 496
(18
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0"
 #" 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"green\")))) #"
 #"(struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 2 #") "
0 6           4 21 500
(19
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulle"
 #"d-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0"
 #" 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"LightPink\"))"
 #")) #(struct:bb 40 40 40) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 9 #"Z-Brick-3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; world->scene : World -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Creates the world _w_ as a Scene"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->scene"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 6           4 21 4021
(20
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 800) #(struct:point 0 800)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"blac"
 #"k\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0"
 #" 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0"
 #" 0 40 0 0)) 255 \"DarkGreen\"))))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 80"
 #"0) #(struct:point 0 800)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 40 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 4"
 #"0 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(st"
 #"ruct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)"
 #") 255 \"DarkGreen\"))))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 400 0) #(struct:point 400 800) #(struc"
 #"t:point 0 800)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 80 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(s"
 #"truct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulle"
 #"d-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"Da"
 #"rkGreen\"))))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 400 0) #(struct:point 400 800) #(struct:point 0 "
 #"800)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 120"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pul"
 #"led-point 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0"
 #" 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"DarkGreen\""
 #"))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 400 0) #(struct:point 400 800) #(struct:point 0 800)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 160 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) outline \"black\"))) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 "
 #"0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"DarkGreen\"))))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 400 0) #(struct:point 400 800) #(struct:point 0 800)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400 800 0 0) #"
 #"(struct:pulled-point 0 0 0 800 0 0)) outline #(struct:pen \"black\" "
 #"2 solid round round)))) #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400 800 0 0) #(str"
 #"uct:pulled-point 0 0 0 800 0 0)) 255 \"white\"))))))))))))))))))))))"
 #")))) #(struct:bb 400 800 800) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"LOBricks->Scene2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; LOBricks->Scene2 : List-of-Bricks List-of-Bricks -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; Adds two List-of-Bricks to a background"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"LOBricks->Scene2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))) "
0 6           4 21 2002
(21
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 800) #(struct:point 0 800)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 40 80 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-po"
 #"int 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"bl"
 #"ack\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40"
 #" 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0"
 #" 0 0 40 0 0)) 255 \"red\"))))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 800) #"
 #"(struct:point 0 800)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 80 120 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 40 "
 #"0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"black\"))) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) "
 #"255 \"blue\"))))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 400 0) #(struct:point 400 800) #(struct:point"
 #" 0 800)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0"
 #" 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 0)) 255 \"white\")"
 #"))))))))))))) #(struct:bb 400 800 800) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"LOBricks->Scene2"
0 0 24 3 1 #" "
0 0 14 3 4 #"lob1"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 12 #"brick->scene"
0 0 24 3 2 #" ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 12 #"brick->scene"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 2 #") "
0 0 14 3 4 #"lob1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; brick->scene : Brick Image -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; Adds a brick to a background"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"brick->scene"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 1339
(22
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 800) #(struct:point 0 800)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 160 200 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-"
 #"point 0 0 40 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \""
 #"black\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-point"
 #" 0 0 0 40 0 0)) 255 \"green\"))))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 80"
 #"0) #(struct:point 0 800)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #("
 #"struct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(stru"
 #"ct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 0"
 #")) 255 \"white\")))))))))) #(struct:bb 400 800 800) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"brick->scene"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"bg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"place-image-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick+outline"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 2 #"bg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; place-image-on-grid : Image Number Number Image -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Just like place-image, but takes x,y in grid coordinates"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"place-image-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 1066
(23
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 800) #(struct:point 0 800)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80 120 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poin"
 #"t 0 0 0 40 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 800) "
 #"#(struct:point 0 800)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(str"
 #"uct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 "
 #"0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:"
 #"pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 0)) "
 #"255 \"white\")))))))))) #(struct:bb 400 800 800) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"place-image-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 1069
(24
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 800) #(struct:point 0 800)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80 600 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poin"
 #"t 0 0 0 40 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 80"
 #"0) #(struct:point 0 800)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #("
 #"struct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(stru"
 #"ct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 0"
 #")) 255 \"white\")))))))))) #(struct:bb 400 800 800) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"place-image-on-grid"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"BLOCK-SQSIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #") "
0 6           4 21 1070
(25
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 800) #(struct:point 0 800)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 360 760 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) 255 \"purple\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 8"
 #"00) #(struct:point 0 800)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #"
 #"(struct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 80"
 #"0 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(str"
 #"uct:pulled-point 0 0 400 800 0 0) #(struct:pulled-point 0 0 0 800 0 "
 #"0)) 255 \"white\")))))))))) #(struct:bb 400 800 800) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"place-image-on-grid"
0 0 24 3 1 #" "
0 0 14 3 4 #"img1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 4 #"img2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"img1"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 8 #"quotient"
0 0 24 3 1 #" "
0 0 14 3 11 #"GRID-SQSIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 4 #"img2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; Randomization of Next Piece and Starting Location ;;"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; make-new-world _ List of Bricks -> World"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; Creates a new world with a new random piece at a random x location"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 21 #"make-new-random-piece"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"lofb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; make-new-random-piece : Type -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; Creates a new piece (given type _t_) at a random x location"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 21 #"make-new-random-piece"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 21 #"make-new-random-piece"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #") "
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 21 #"make-new-random-piece"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #") "
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"make-new-random-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-new-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; make-new-piece : Type NNInt -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 89
(26
 #"; Creates a random new piece at a random _x_ location with the piece"
 #" assigned to Type _t_"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-piece"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-piece"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-piece"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-new-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; make-new-LOBricks : Type NNInt -> LOBricks"
0 0 24 29 1 #"\n"
0 0 17 3 69
(27
 #"; Creates a new LOBricks with a given _x_ location and shape Type _t"
 #"_"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-new-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-O"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-I"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-L"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-J"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-T"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-Z"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-S"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-new-M"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-new-II"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-O : Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97
(28
 #"; Creates a new LOBricks that moves the x position of each brick in "
 #"the list to the given x value"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-O"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-O"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-I : Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-I"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-I"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-L : Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-L"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-L"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-J : Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-J"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-J"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-T : Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-T"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-T"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-Z : Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-Z"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-Z"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; make-new-S: Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-S"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-S"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; make-new-M: Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-M"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-new-M"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; make-new-II: Number -> LObricks"
0 0 24 29 1 #"\n"
0 0 17 3 97 28 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-new-II"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-new-II"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; make-new-center : Type NNInt -> Posn"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; Creates a new posn with a given x location and shape Type"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-new-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; random-start-pos : Type -> NNInt"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; Given a Type _t_ that represents a shape, return"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; a random number in the bounds of the x-pos of the shape"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 2 #") "
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"random-start-pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"II\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; next-piece : Number -> Type"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; returns a String (Type) that represents a new random piece"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"J\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"T\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"Z\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"S\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"M\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"II\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"next-piece"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"O\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"I\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"J\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"T\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"Z\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"S\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"M\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"II\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Check-Satisfied Tests ;;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; brick/world-x-between-0-10? : Piece -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; Determines whether an x-position of a brick is between 0 to 8"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 6 #"world1"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 6 #"world2"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 6 #"world3"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/world-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 97
(29
 #";(check-expect (brick/piece-x-between-0-10? (make-piece LOBricks1 (m"
 #"ake-posn 11 11) \"O\")) #false)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; brick/piece-x-between-0-10? : Piece -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; Determines whether an x-position of a brick is between 0 to 8"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"brick/piece-x-between-0-10?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; between-0-5-6-7-8-10? : NNInt -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 96
(30
 #"; Determines whether a number is between 0 to 6, or 0 to 7, 0 to 8, "
 #"0 to 10 (returns true/false)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"between-0-5-6-7-8-10?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Exercise 4"
0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 17 3 79 7 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Piece Rotation ;;"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; piece-rotate-cw : Piece -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 72
(31
 #"; Rotate a piece _p_ 90 degrees counterclockwise around its center b"
 #"lock"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 18 #"rotate-LOBricks-cw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"piece-Type"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; rotate-LOBricks-cw : LOBricks Posn -> LOBricks"
0 0 24 29 1 #"\n"
0 0 17 3 74
(32
 #"; Rotates LOBricks _lob_ around the center block _center_ counterclo"
 #"ckwise"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"rotate-LOBricks-cw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"rotate-LOBricks-cw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-Z"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-Z"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"rotate-LOBricks-cw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"rotate-LOBricks-cw"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"brick-rotate-cw-local"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 21 #"brick-rotate-cw-local"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; piece-rotate-ccw : Piece -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; Rotate a piece _p_ 90 degrees clockwise around its center block"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 19 3 3 #"\"I\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rotate-LOBricks-ccw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"piece-Type"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; rotate-LOBricks-ccw : LOBricks Posn -> LOBricks"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; Rotates LOBricks _lob_ around the center block _center_ clockwise"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rotate-LOBricks-ccw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rotate-LOBricks-ccw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rotate-LOBricks-ccw"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"rotate-LOBricks-ccw"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 22 #"brick-rotate-ccw-local"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 22 #"brick-rotate-ccw-local"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; brick-rotate-cw : Posn Brick -> Brick"
0 0 24 29 1 #"\n"
0 0 17 3 73
(33
 #"; Rotate the brick _b_ 90 degrees counterclockwise around the center"
 #" _c_."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; brick-rotate-ccw : Posn Brick -> Brick"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; Rotate the brick _b_ 90 degrees clockwise around the center _c_."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-rotate-ccw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 15 #"brick-rotate-cw"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Piece Movement ;;"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; piece-move : Number Number Piece -> Piece"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; Moves a Piece _p_ based on the parameter _x_ and _y_"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-Z"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"LightPink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 19 3 3 #"\"Z\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"move-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"piece-Type"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; move-LOBricks : Number Number LOBricks -> LOBricks"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; Shifts location (x and y position _x_ and _y_) of LOBricks _lob_"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-LOBricks"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-LOBricks"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-LOBricks"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"move-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"brick-move-local"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 11 #"brick-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 16 #"brick-move-local"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; move-center : Number Number Posn -> Posn"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; Shifts location (x and y position _x_ and _y_ of center _c_"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-center"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-center"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-center"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 12 #"piece-center"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-T"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"move-center"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Out-of-Bounds (OOB) Checks ;;"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; valid-piece-move : World Piece -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 74
(34
 #"; Determines if the piece movement (shift or rotation) is valid with"
 #"in the"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #"; parameters of the grid."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 1 #" "
0 0 14 3 9 #"bad-piece"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-less-than-0?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 21 #"x-greater-than-width?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; x-less-than-0? : LOBricks -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 71
(35
 #"; Returns true if a brick in a LOBricks _lob_ has an x-posn less tha"
 #"n 0"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-less-than-0?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-less-than-0?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-less-than-0?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 9 #"bad-piece"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"x-less-than-0?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; x-greater-than-width? : LOBricks -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 82
(36
 #"; Returns true if a brick in LOBricks _lob_ has an x-posn greater th"
 #"an BOARD-WIDTH"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"x-greater-than-width?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"x-greater-than-width?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"x-greater-than-width?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 9 #"bad-piece"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"x-greater-than-width?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 20 #"bad-piece-over-width"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"x-greater-than-width?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 24 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; ON-TICK CONDITIONS ;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; drop-falling-block : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 72
(37
 #"; Given a world, move the falling block down (on the y-axis) 1 grid "
 #"unit"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"drop-falling-block"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"drop-falling-block"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"drop-falling-block"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"drop-falling-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; ON-TICK CONDITIONS FOR COLLISION ;;"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; collision? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; Determines if the next move will make a piece collide with debris"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 5 #")))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-l?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"collision-r?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"collision-b?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; collision-l? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 82
(38
 #";; Determines if the next move (to the left) will make a piece colli"
 #"de with debris"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-l?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-l?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-l?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-l?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-touches-1?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"b2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 5 #")))) "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 4 #"lofb"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"lob-touches-1?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; collision-r? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 83
(39
 #";; Determines if the next move (to the right) will make a piece coll"
 #"ide with debris"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-r?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-r?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-r?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-r?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-touches-r?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"b2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 6 #"))))) "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 4 #"lofb"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"lob-touches-r?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; collision-b? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Determines if the next falling block will collide with debris"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-b?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-b?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-b?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-b?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lob-touches-b?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"b2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 5 #")))) "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")) "
0 0 14 3 4 #"lofb"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"lob-touches-b?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; collision-rotate? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Determines if a rotating piece will hit debris"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"collision-rotate?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"collision-rotate?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"collision-rotate?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"collision-rotate?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lob-touches-rotate?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"b2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 5 #")))) "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")) "
0 0 14 3 4 #"lofb"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 19 #"lob-touches-rotate?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; bottom? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 81
(40
 #"; Given a world _w_, check if the falling-piece is passed the bottom"
 #" of the grid."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bottom?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bottom?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bottom?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bottom?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 20 #"bad-piece-over-width"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bottom?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"P\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bottom?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; lob-at-bottom2? : LOBricks -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 86
(41
 #"; Given a LOBricks _lob_, check if one of the bricks is passed the b"
 #"ottom of the grid."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 20 #"bad-piece-over-width"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"lob-at-bottom2?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; progress-game : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 80
(42
 #"; on-tick function, determines whether falling-piece is valid in the"
 #" grid or not"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"progress-game"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"progress-game"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"progress-game"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"progress-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-b?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 7 #"bottom?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"make-new-world"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 18 #"drop-falling-block"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; BIG BANG ;;"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; main : World Number Number -> Universe"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; Creates an instance of the game Tetris"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"filtered-lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 13 #"progress-game"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 12 #"world->scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 11 #"world-done?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; world-done? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; Has the game ended?"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-done?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-done?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 5 #")))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-done?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"tetris-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; tetris-death? : List-of-Bricks -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 80
(43
 #";; Checks to see if the lofb has appended too far up the game in the"
 #" y direction"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tetris-top?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 4 #"))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tetris-top?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"piece-LOBricks"
0 0 24 3 1 #" "
0 0 14 3 8 #"piece-II"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tetris-top?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lofb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))) "
0 0 14 3 4 #"lofb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; key-handler : World Key-Event -> World"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; handle things when the user hits a key on the keyboard."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                                "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 67
#"                                                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                 "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"a\""
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 19 3 3 #"\"L\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 16 #"key-handler-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 17 #"key-handler-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 3 #") ("
0 0 14 3 13 #"key-handler-A"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 24 3 3 #") ("
0 0 14 3 13 #"key-handler-S"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; key-handler-left : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; Handles input on key \"left\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"key-handler-left"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"key-handler-left"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"key-handler-left"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"key-handler-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-l?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; key-handler-right : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; Handles input on key \"right\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"key-handler-right"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                               "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"key-handler-right"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 65
#"                                                                ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 64
#"                                                               ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                               "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"key-handler-right"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"key-handler-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"collision-r?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"piece-move"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; key-handler-A : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; Handles input on key \"A\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-A"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-A"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-A"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-A"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 16 #"piece-rotate-ccw"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; key-handler-S : World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; Handles input on key \"S\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-S"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 19 3 3 #"\"S\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-S"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 10 #"make-piece"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 19 3 3 #"\"O\""
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-S"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-piece"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"key-handler-S"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"valid-piece-move?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 15 #"piece-rotate-cw"
0 0 24 3 2 #" ("
0 0 14 3 19 #"world-falling-piece"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"world-lofb"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; LOFB PROBABILITY  ;;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; filtered-lob : Number Number -> List-of-Bricks"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; given a probility and number of rows creates a list of debris"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; check satisfied goes here :((((("
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"filtered-lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"filtered-l"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 14 #"list-of-debris"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; filtered-l : Number List-of-X -> List-of-X"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; given a probability removes certain number of elements"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; check satisfied goes here :((((((((((((((((((("
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"filtered-l"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"probability"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"101"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 11 #"probability"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; list-of-debris : Number -> List-of-Bricks"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Creates a list of bricks filling all n rows"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"list-of-debris"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"list-of-debris"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"combine-lister"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lolo-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; combined-lister: [List-of-[List-of-Bricks]] -> List-of-Bricks"
0 0 24 29 1 #"\n"
0 0 17 3 93
(44
 #";; Crunches a list of lists and creates a single lists with all elem"
 #"ents in all other listsIt"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"combine-lister"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lolo-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"combine-lister"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Number -> [List-of-[List-of-Bricks]]"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Takes n (row number) and created a list of list of bricks"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lolo-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lolo-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"descending-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"build-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"add1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 13 #"list-of-brick"
0 0 24 3 2 #" ("
0 0 14 3 15 #"descending-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; list-of-brick : NNInt -> List"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Builds list of a row filled with bricks"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-of-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-of-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"build-list"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"grey\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; Check-Satisfied Tests ;;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(45
 #";; I couldn't complete these check-satisifed in time, but they would"
 #" basically"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#";; check to see if it the digit was a number between 0-100"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; These would act filtered-lob and filtered-l"
0           0
